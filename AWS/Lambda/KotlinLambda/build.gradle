/*
 * This build file was generated by the Gradle "init" task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library

//プロジェクト自体のバージョン
version = "1.0"

//buildscript:ビルドスクリプト自体が依存しているライブラリなどを指定するブロック
buildscript {
    ext.kotlin_version = "1.3.10"
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

//ビルド設定で利用するプラグインの宣言です。apply plugin: java とすると java のプラグインが適用
apply plugin: "java-library"
apply plugin: "java"
apply plugin: "kotlin"


//プロジェクトのソースセットには、sourceSetsプロパティを使ってアクセスすることができます。
sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
    main.java.srcDirs += "src/main/java"
}


//プロジェクトとしての依存ライブラリを指定してます。
//compile やら testCompile やらは Maven での <scope> にあたるものになります。
repositories {
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api "org.apache.commons:commons-math3:3.6.1"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:23.0"
    compile fileTree(dir: "lib", include: "*.jar")

    // Use JUnit test framework
    testImplementation "junit:junit:4.12"
        compile (
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            "com.amazonaws:aws-java-sdk-lambda:1.11.455",
            "com.amazonaws:aws-lambda-java-core:1.2.0",
            "com.googlecode.json-simple:json-simple:1.1.1",
    )
    testCompile group: "junit", name: "junit", version: "4.11"
}


//ビルドの設定を行うスクリプト
//from compileKotlinでkotlinのコンパイル完了物をさらうイメージ??
//lib配下にライブラリ等を入れるとlambda実行時に参照できるらしい
task buildZip(type: Zip) {
    from compileKotlin
    from processResources
    into("lib") {
         from configurations.runtime
    }
}

//dependsOn メソッドを使用することで、タスク間に依存関係を持たせることができます。
//下記だとbuildコマンドを実行する前にbuildZipをやるという意味らしい
build.dependsOn buildZip